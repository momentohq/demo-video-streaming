AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Server support for video streaming app

Metadata:
  esbuild-properties: &esbuild-properties
    Format: esm
    Minify: true
    OutExtension:
      - .js=.mjs
    Target: es2020
    Sourcemap: false
    EntryPoints:
      - index.mjs
    Banner:
      - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);
    External:
      - '@aws-sdk/*'
    Loader:
      - .hbs=text

Parameters:
  MomentoApiKey:
    Type: String
    NoEcho: true
  Connection:
    Type: String
    Description: Connection ARN for AppRunner <> GitHub

Globals:
  Function:
    Runtime: nodejs20.x
    Architectures:
      - arm64
    Tracing: Active
    Timeout: 15
    MemorySize: 1024
    CodeUri: functions
    Environment:
      Variables:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

Resources:
  VideoApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: v1
      DefinitionBody:
        'Fn::Transform':
          Name: AWS::Include
          Parameters:
            Location: ./openapi.yaml

  WebhookFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - webhook.mjs
    Properties:
      Handler: webhook.handler
      Policies:
        - AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          MOMENTO_API_KEY: !Ref MomentoApiKey
          CACHE_NAME: video
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref VideoApi
            Path: /data
            Method: POST

  DashboardFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - dashboard.mjs
    Properties:
      Handler: dashboard.handler
      Policies:
        - AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          MOMENTO_API_KEY: !Ref MomentoApiKey
          CACHE_NAME: video
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref VideoApi
            Path: /dashboard
            Method: GET

  PlayerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - player.mjs
    Properties:
      Handler: player.handler
      Policies:
        - AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          MOMENTO_API_KEY: !Ref MomentoApiKey
          CACHE_NAME: video
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref VideoApi
            Path: /
            Method: GET

  VideoAppRunnerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ['tasks.apprunner.amazonaws.com']
            Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: RSSAppRunnerRole
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action: ssm:GetParameters
              Resource:
                - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/momento

  HeartbeatService:
    Type: AWS::AppRunner::Service
    Properties:
      SourceConfiguration:
        AuthenticationConfiguration:
          ConnectionArn: !Ref Connection
        AutoDeploymentsEnabled: true
        CodeRepository:
          CodeConfiguration:
            ConfigurationSource: REPOSITORY
          RepositoryUrl: https://github.com/momentohq/demo-video-streaming
          SourceCodeVersion:
            Type: BRANCH
            Value: main
      InstanceConfiguration:
        InstanceRoleArn: !GetAtt VideoAppRunnerRole.Arn
        Cpu: 4 vCPU
        Memory: 8 GB

Outputs:
  VideoBaseUrl:
    Description: API Gateway endpoint for the video streaming API
    Value: !Sub 'https://${VideoApi}.execute-api.${AWS::Region}.amazonaws.com/v1'
