{
  "Comment": "Runs the simulation for a specific player",
  "StartAt": "Initialize",
  "States": {
    "Initialize": {
      "Type": "Pass",
      "Parameters": {
        "loops.$": "States.MathRandom(3,100)",
        "counter": 0
      },
      "Next": "Has more iterations?"
    },
    "Has more iterations?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.loops",
          "NumericGreaterThanPath": "$.counter",
          "Next": "Simulate player heartbeat"
        }
      ],
      "Default": "Completed"
    },
    "Simulate player heartbeat": {
      "Type": "Task",
      "Resource": "${LambdaInvoke}",
      "Parameters": {
        "FunctionName": "${Simulator}",
        "Payload": {
          "id.$": "$$.Execution.Name"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "ResultPath": null,
      "Next": "Wait for heartbeat timeout"
    },
    "Wait for heartbeat timeout": {
      "Type": "Wait",
      "Seconds": 1,
      "Next": "Increment counter"
    },
    "Increment counter": {
      "Type": "Pass",
      "Parameters": {
        "loops.$": "$.loops",
        "counter.$": "States.MathAdd($.counter, 1)"
      },
      "Next": "Has more iterations?"
    },
    "Completed": {
      "Type": "Succeed"
    }
  }
}
